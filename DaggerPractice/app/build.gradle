apply plugin: 'com.android.application'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.1"

    defaultConfig {
        applicationId "com.example.daggerpractice"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // Add Dagger dependencies
    def dagger_version = "2.29.1"
    implementation "com.google.dagger:dagger:$dagger_version"
    annotationProcessor "com.google.dagger:dagger-compiler:$dagger_version"
    implementation "com.google.dagger:dagger-android:$dagger_version"
    implementation "com.google.dagger:dagger-android-support:$dagger_version" // if you use the support libraries
    annotationProcessor "com.google.dagger:dagger-android-processor:$dagger_version"

    // For google material UI
    implementation 'com.google.android.material:material:1.2.1'

    // For Glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'

    // For Retrofit.
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'

    // For using GSON ( A Java serialization/deserialization library to convert Java Objects into JSON and back )
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'

    // Only the Logging Interceptor dependency from OKHTTP
    implementation "com.squareup.okhttp3:logging-interceptor:4.8.1"

    // For RxJava
    implementation "io.reactivex.rxjava3:rxjava:3.0.1"

    // RxRetrofit call adapter : To convert Retrofit Call object to RxJava Flowable object
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.9.0'

    // LiveDataReactiveStreams: Where RxJava meets LiveData ( Convert Flowable to LiveData )
    implementation "androidx.lifecycle:lifecycle-reactivestreams:2.2.0"

    // Architecture component Navigation
    def nav_version = "2.3.0-alpha01"
    implementation "androidx.navigation:navigation-fragment:$nav_version"
    implementation "androidx.navigation:navigation-ui:$nav_version"
    implementation "androidx.navigation:navigation-runtime:$nav_version"
}